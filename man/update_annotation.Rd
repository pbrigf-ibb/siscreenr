% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun-update_annotation.R
\name{update_annotation}
\alias{update_annotation}
\alias{check_geneid_status}
\alias{check_geneids}
\alias{get_gene_fields}
\alias{get_gene_fields_batch}
\title{update library annotation}
\usage{
update_annotation(infile, outfile, verbose = FALSE)

check_geneid_status(geneID)

check_geneids(geneIDs)

get_gene_fields(geneIDs)

get_gene_fields_batch(geneIDs)
}
\arguments{
\item{infile}{file containing the original annotation;
must be compatible with \code{[data.table]{fread}};
deafults to internally sotred Dharmacon annotation from 16th May 2015}

\item{outfile}{(optional) path to a file to save the updated annotation}

\item{verbose}{print function progeress as messages or not}
}
\value{
The function either invisibly returns the updated annotation
        or saves to a specified path and returns nothing.
}
\description{
Check all geneIDs in library annotation file against GeneBank and get up-to-date information.
}
\details{
Since information in data bases can change it is prudent
to refresh the library annotation from time to time.
This function takes every geneID in an annotation file and checks its current status
in GeneBank: whether is was withdrawn or replaced (and if so, by what new geneID)
Once the geneIDs are updated, two new queries are sent to GeneBank.
The first retrieves the current gene symbol, gene description, map location,
chromosome number, and aliases of all geneIDs.
The other query retrieves the gene type (protein-coding, pseudogene, etc.).

Old geneIDs and gene symbols are kept in separate columsn, e.g. \code{old_geneid}.
}
\section{Functions}{
\itemize{
\item \code{check_geneid_status}: checks a single geneID and returns its gene type (protein-coding, pseudo, etc.),
withdrawn and replaced status (TRUE/FALSE), and a potential new geneID;
returns a character vector

\item \code{check_geneids}: runs \code{check_geneid_status} for all geneIDs and returns a \code{data.frame};
pauses for 1 second before each request to avoid suspicion of DDOS attack

\item \code{get_gene_fields}: queries the gene data base twice;
first retrieves five fields:
gene symbol, gene description, map location, chromosome number, and aliases
(other geneIDs associated with the geneID);
then retrieves gene type

\item \code{get_gene_fields_batch}: runs \code{get_gene_fields} in batches of 499 and less; this is necessary as
the results of \code{reutils::efetch} are unworkable for larger sets
}}

\section{File format}{

As of version 2.4.0 the function has undergone some generalization.
It now serves not only the original Dharmacon file but also other text files.
The input file may be tab- or comma delimited.
It must contain the following information:
plate number, well/position (e.g. A01), geneID and gene symbol.
All other columns are immaterial but will not be dropped.

Annotation files can be updated again. In that case the columns \code{old_geneid}
and \code{old_gene_symbol} will remain as is and the update will be run with old geneIDs
rather than the updated ones.
}

\section{Dependencies}{

GeneBank queries are handled with the package \code{reutils}.
Data is loaded (and saved) with package \code{data.table}.
Data processing is done with the (minimal) use of \code{dplyr} and \code{tidyr}.
Four internal functions are called here, see \code{Functions}.
}

\section{Processing time}{

\code{check_geneid_status}
queries GeneBank one geneID at a time, which may appear
as a DDOS attack if there are too many geneIDs to check.
Hence, a 1 second pause is introduced before every query.
}

\keyword{internal}
